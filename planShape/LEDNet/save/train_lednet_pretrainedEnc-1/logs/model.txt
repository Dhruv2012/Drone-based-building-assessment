DataParallel(
  (module): Net(
    (encoder): Encoder(
      (initial_block): DownsamplerBlock(
        (conv): Conv2d(3, 29, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
        (pool): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
        (bn): BatchNorm2d(32, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (layers): ModuleList(
        (0): SS_nbt_module(
          (conv3x1_1_l): Conv2d(16, 16, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))
          (conv1x3_1_l): Conv2d(16, 16, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))
          (bn1_l): BatchNorm2d(16, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
          (conv3x1_2_l): Conv2d(16, 16, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))
          (conv1x3_2_l): Conv2d(16, 16, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))
          (bn2_l): BatchNorm2d(16, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
          (conv3x1_1_r): Conv2d(16, 16, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))
          (conv1x3_1_r): Conv2d(16, 16, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))
          (bn1_r): BatchNorm2d(16, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
          (conv3x1_2_r): Conv2d(16, 16, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))
          (conv1x3_2_r): Conv2d(16, 16, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))
          (bn2_r): BatchNorm2d(16, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (dropout): Dropout2d(p=0.03, inplace=False)
        )
        (1): SS_nbt_module(
          (conv3x1_1_l): Conv2d(16, 16, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))
          (conv1x3_1_l): Conv2d(16, 16, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))
          (bn1_l): BatchNorm2d(16, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
          (conv3x1_2_l): Conv2d(16, 16, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))
          (conv1x3_2_l): Conv2d(16, 16, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))
          (bn2_l): BatchNorm2d(16, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
          (conv3x1_1_r): Conv2d(16, 16, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))
          (conv1x3_1_r): Conv2d(16, 16, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))
          (bn1_r): BatchNorm2d(16, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
          (conv3x1_2_r): Conv2d(16, 16, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))
          (conv1x3_2_r): Conv2d(16, 16, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))
          (bn2_r): BatchNorm2d(16, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (dropout): Dropout2d(p=0.03, inplace=False)
        )
        (2): SS_nbt_module(
          (conv3x1_1_l): Conv2d(16, 16, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))
          (conv1x3_1_l): Conv2d(16, 16, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))
          (bn1_l): BatchNorm2d(16, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
          (conv3x1_2_l): Conv2d(16, 16, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))
          (conv1x3_2_l): Conv2d(16, 16, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))
          (bn2_l): BatchNorm2d(16, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
          (conv3x1_1_r): Conv2d(16, 16, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))
          (conv1x3_1_r): Conv2d(16, 16, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))
          (bn1_r): BatchNorm2d(16, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
          (conv3x1_2_r): Conv2d(16, 16, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))
          (conv1x3_2_r): Conv2d(16, 16, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))
          (bn2_r): BatchNorm2d(16, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (dropout): Dropout2d(p=0.03, inplace=False)
        )
        (3): DownsamplerBlock(
          (conv): Conv2d(32, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
          (pool): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
          (bn): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
        (4): SS_nbt_module(
          (conv3x1_1_l): Conv2d(32, 32, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))
          (conv1x3_1_l): Conv2d(32, 32, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))
          (bn1_l): BatchNorm2d(32, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
          (conv3x1_2_l): Conv2d(32, 32, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))
          (conv1x3_2_l): Conv2d(32, 32, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))
          (bn2_l): BatchNorm2d(32, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
          (conv3x1_1_r): Conv2d(32, 32, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))
          (conv1x3_1_r): Conv2d(32, 32, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))
          (bn1_r): BatchNorm2d(32, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
          (conv3x1_2_r): Conv2d(32, 32, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))
          (conv1x3_2_r): Conv2d(32, 32, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))
          (bn2_r): BatchNorm2d(32, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (dropout): Dropout2d(p=0.03, inplace=False)
        )
        (5): SS_nbt_module(
          (conv3x1_1_l): Conv2d(32, 32, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))
          (conv1x3_1_l): Conv2d(32, 32, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))
          (bn1_l): BatchNorm2d(32, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
          (conv3x1_2_l): Conv2d(32, 32, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))
          (conv1x3_2_l): Conv2d(32, 32, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))
          (bn2_l): BatchNorm2d(32, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
          (conv3x1_1_r): Conv2d(32, 32, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))
          (conv1x3_1_r): Conv2d(32, 32, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))
          (bn1_r): BatchNorm2d(32, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
          (conv3x1_2_r): Conv2d(32, 32, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))
          (conv1x3_2_r): Conv2d(32, 32, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))
          (bn2_r): BatchNorm2d(32, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (dropout): Dropout2d(p=0.03, inplace=False)
        )
        (6): DownsamplerBlock(
          (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
          (pool): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
          (bn): BatchNorm2d(128, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
        (7): SS_nbt_module(
          (conv3x1_1_l): Conv2d(64, 64, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))
          (conv1x3_1_l): Conv2d(64, 64, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))
          (bn1_l): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
          (conv3x1_2_l): Conv2d(64, 64, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))
          (conv1x3_2_l): Conv2d(64, 64, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))
          (bn2_l): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
          (conv3x1_1_r): Conv2d(64, 64, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))
          (conv1x3_1_r): Conv2d(64, 64, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))
          (bn1_r): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
          (conv3x1_2_r): Conv2d(64, 64, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))
          (conv1x3_2_r): Conv2d(64, 64, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))
          (bn2_r): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (dropout): Dropout2d(p=0.3, inplace=False)
        )
        (8): SS_nbt_module(
          (conv3x1_1_l): Conv2d(64, 64, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))
          (conv1x3_1_l): Conv2d(64, 64, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))
          (bn1_l): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
          (conv3x1_2_l): Conv2d(64, 64, kernel_size=(3, 1), stride=(1, 1), padding=(2, 0), dilation=(2, 1))
          (conv1x3_2_l): Conv2d(64, 64, kernel_size=(1, 3), stride=(1, 1), padding=(0, 2), dilation=(1, 2))
          (bn2_l): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
          (conv3x1_1_r): Conv2d(64, 64, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))
          (conv1x3_1_r): Conv2d(64, 64, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))
          (bn1_r): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
          (conv3x1_2_r): Conv2d(64, 64, kernel_size=(3, 1), stride=(1, 1), padding=(2, 0), dilation=(2, 1))
          (conv1x3_2_r): Conv2d(64, 64, kernel_size=(1, 3), stride=(1, 1), padding=(0, 2), dilation=(1, 2))
          (bn2_r): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (dropout): Dropout2d(p=0.3, inplace=False)
        )
        (9): SS_nbt_module(
          (conv3x1_1_l): Conv2d(64, 64, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))
          (conv1x3_1_l): Conv2d(64, 64, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))
          (bn1_l): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
          (conv3x1_2_l): Conv2d(64, 64, kernel_size=(3, 1), stride=(1, 1), padding=(5, 0), dilation=(5, 1))
          (conv1x3_2_l): Conv2d(64, 64, kernel_size=(1, 3), stride=(1, 1), padding=(0, 5), dilation=(1, 5))
          (bn2_l): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
          (conv3x1_1_r): Conv2d(64, 64, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))
          (conv1x3_1_r): Conv2d(64, 64, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))
          (bn1_r): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
          (conv3x1_2_r): Conv2d(64, 64, kernel_size=(3, 1), stride=(1, 1), padding=(5, 0), dilation=(5, 1))
          (conv1x3_2_r): Conv2d(64, 64, kernel_size=(1, 3), stride=(1, 1), padding=(0, 5), dilation=(1, 5))
          (bn2_r): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (dropout): Dropout2d(p=0.3, inplace=False)
        )
        (10): SS_nbt_module(
          (conv3x1_1_l): Conv2d(64, 64, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))
          (conv1x3_1_l): Conv2d(64, 64, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))
          (bn1_l): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
          (conv3x1_2_l): Conv2d(64, 64, kernel_size=(3, 1), stride=(1, 1), padding=(9, 0), dilation=(9, 1))
          (conv1x3_2_l): Conv2d(64, 64, kernel_size=(1, 3), stride=(1, 1), padding=(0, 9), dilation=(1, 9))
          (bn2_l): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
          (conv3x1_1_r): Conv2d(64, 64, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))
          (conv1x3_1_r): Conv2d(64, 64, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))
          (bn1_r): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
          (conv3x1_2_r): Conv2d(64, 64, kernel_size=(3, 1), stride=(1, 1), padding=(9, 0), dilation=(9, 1))
          (conv1x3_2_r): Conv2d(64, 64, kernel_size=(1, 3), stride=(1, 1), padding=(0, 9), dilation=(1, 9))
          (bn2_r): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (dropout): Dropout2d(p=0.3, inplace=False)
        )
        (11): SS_nbt_module(
          (conv3x1_1_l): Conv2d(64, 64, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))
          (conv1x3_1_l): Conv2d(64, 64, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))
          (bn1_l): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
          (conv3x1_2_l): Conv2d(64, 64, kernel_size=(3, 1), stride=(1, 1), padding=(2, 0), dilation=(2, 1))
          (conv1x3_2_l): Conv2d(64, 64, kernel_size=(1, 3), stride=(1, 1), padding=(0, 2), dilation=(1, 2))
          (bn2_l): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
          (conv3x1_1_r): Conv2d(64, 64, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))
          (conv1x3_1_r): Conv2d(64, 64, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))
          (bn1_r): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
          (conv3x1_2_r): Conv2d(64, 64, kernel_size=(3, 1), stride=(1, 1), padding=(2, 0), dilation=(2, 1))
          (conv1x3_2_r): Conv2d(64, 64, kernel_size=(1, 3), stride=(1, 1), padding=(0, 2), dilation=(1, 2))
          (bn2_r): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (dropout): Dropout2d(p=0.3, inplace=False)
        )
        (12): SS_nbt_module(
          (conv3x1_1_l): Conv2d(64, 64, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))
          (conv1x3_1_l): Conv2d(64, 64, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))
          (bn1_l): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
          (conv3x1_2_l): Conv2d(64, 64, kernel_size=(3, 1), stride=(1, 1), padding=(5, 0), dilation=(5, 1))
          (conv1x3_2_l): Conv2d(64, 64, kernel_size=(1, 3), stride=(1, 1), padding=(0, 5), dilation=(1, 5))
          (bn2_l): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
          (conv3x1_1_r): Conv2d(64, 64, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))
          (conv1x3_1_r): Conv2d(64, 64, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))
          (bn1_r): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
          (conv3x1_2_r): Conv2d(64, 64, kernel_size=(3, 1), stride=(1, 1), padding=(5, 0), dilation=(5, 1))
          (conv1x3_2_r): Conv2d(64, 64, kernel_size=(1, 3), stride=(1, 1), padding=(0, 5), dilation=(1, 5))
          (bn2_r): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (dropout): Dropout2d(p=0.3, inplace=False)
        )
        (13): SS_nbt_module(
          (conv3x1_1_l): Conv2d(64, 64, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))
          (conv1x3_1_l): Conv2d(64, 64, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))
          (bn1_l): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
          (conv3x1_2_l): Conv2d(64, 64, kernel_size=(3, 1), stride=(1, 1), padding=(9, 0), dilation=(9, 1))
          (conv1x3_2_l): Conv2d(64, 64, kernel_size=(1, 3), stride=(1, 1), padding=(0, 9), dilation=(1, 9))
          (bn2_l): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
          (conv3x1_1_r): Conv2d(64, 64, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))
          (conv1x3_1_r): Conv2d(64, 64, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))
          (bn1_r): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
          (conv3x1_2_r): Conv2d(64, 64, kernel_size=(3, 1), stride=(1, 1), padding=(9, 0), dilation=(9, 1))
          (conv1x3_2_r): Conv2d(64, 64, kernel_size=(1, 3), stride=(1, 1), padding=(0, 9), dilation=(1, 9))
          (bn2_r): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (dropout): Dropout2d(p=0.3, inplace=False)
        )
        (14): SS_nbt_module(
          (conv3x1_1_l): Conv2d(64, 64, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))
          (conv1x3_1_l): Conv2d(64, 64, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))
          (bn1_l): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
          (conv3x1_2_l): Conv2d(64, 64, kernel_size=(3, 1), stride=(1, 1), padding=(17, 0), dilation=(17, 1))
          (conv1x3_2_l): Conv2d(64, 64, kernel_size=(1, 3), stride=(1, 1), padding=(0, 17), dilation=(1, 17))
          (bn2_l): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
          (conv3x1_1_r): Conv2d(64, 64, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))
          (conv1x3_1_r): Conv2d(64, 64, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))
          (bn1_r): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
          (conv3x1_2_r): Conv2d(64, 64, kernel_size=(3, 1), stride=(1, 1), padding=(17, 0), dilation=(17, 1))
          (conv1x3_2_r): Conv2d(64, 64, kernel_size=(1, 3), stride=(1, 1), padding=(0, 17), dilation=(1, 17))
          (bn2_r): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (dropout): Dropout2d(p=0.3, inplace=False)
        )
      )
    )
    (decoder): Decoder(
      (apn): APN_Module(
        (branch1): Sequential(
          (0): AdaptiveAvgPool2d(output_size=1)
          (1): Conv2dBnRelu(
            (conv): Sequential(
              (0): Conv2d(128, 2, kernel_size=(1, 1), stride=(1, 1))
              (1): BatchNorm2d(2, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
          )
        )
        (mid): Sequential(
          (0): Conv2dBnRelu(
            (conv): Sequential(
              (0): Conv2d(128, 2, kernel_size=(1, 1), stride=(1, 1))
              (1): BatchNorm2d(2, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
          )
        )
        (down1): Conv2dBnRelu(
          (conv): Sequential(
            (0): Conv2d(128, 1, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3))
            (1): BatchNorm2d(1, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
        )
        (down2): Conv2dBnRelu(
          (conv): Sequential(
            (0): Conv2d(1, 1, kernel_size=(5, 5), stride=(2, 2), padding=(2, 2))
            (1): BatchNorm2d(1, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
        )
        (down3): Sequential(
          (0): Conv2dBnRelu(
            (conv): Sequential(
              (0): Conv2d(1, 1, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
              (1): BatchNorm2d(1, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
          )
          (1): Conv2dBnRelu(
            (conv): Sequential(
              (0): Conv2d(1, 1, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (1): BatchNorm2d(1, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
          )
        )
        (conv2): Conv2dBnRelu(
          (conv): Sequential(
            (0): Conv2d(1, 1, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2))
            (1): BatchNorm2d(1, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
        )
        (conv1): Conv2dBnRelu(
          (conv): Sequential(
            (0): Conv2d(1, 1, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3))
            (1): BatchNorm2d(1, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
        )
      )
    )
  )
)